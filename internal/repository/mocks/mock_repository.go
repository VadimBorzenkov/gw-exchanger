// Code generated by MockGen. DO NOT EDIT.
// Source: internal/repository/repository.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockExchangeRateStorage is a mock of ExchangeRateStorage interface.
type MockExchangeRateStorage struct {
	ctrl     *gomock.Controller
	recorder *MockExchangeRateStorageMockRecorder
}

// MockExchangeRateStorageMockRecorder is the mock recorder for MockExchangeRateStorage.
type MockExchangeRateStorageMockRecorder struct {
	mock *MockExchangeRateStorage
}

// NewMockExchangeRateStorage creates a new mock instance.
func NewMockExchangeRateStorage(ctrl *gomock.Controller) *MockExchangeRateStorage {
	mock := &MockExchangeRateStorage{ctrl: ctrl}
	mock.recorder = &MockExchangeRateStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockExchangeRateStorage) EXPECT() *MockExchangeRateStorageMockRecorder {
	return m.recorder
}

// GetExchangeRate mocks base method.
func (m *MockExchangeRateStorage) GetExchangeRate(currency string) (float64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetExchangeRate", currency)
	ret0, _ := ret[0].(float64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetExchangeRate indicates an expected call of GetExchangeRate.
func (mr *MockExchangeRateStorageMockRecorder) GetExchangeRate(currency interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetExchangeRate", reflect.TypeOf((*MockExchangeRateStorage)(nil).GetExchangeRate), currency)
}

// GetExchangeRates mocks base method.
func (m *MockExchangeRateStorage) GetExchangeRates() (map[string]float64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetExchangeRates")
	ret0, _ := ret[0].(map[string]float64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetExchangeRates indicates an expected call of GetExchangeRates.
func (mr *MockExchangeRateStorageMockRecorder) GetExchangeRates() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetExchangeRates", reflect.TypeOf((*MockExchangeRateStorage)(nil).GetExchangeRates))
}
